<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btAdicionar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAALEQAACxEBf2RfkQAACuBJREFUWEftmPlTU1kW
        x/svm6qZalvFDYXW3l0QNG7t0i0KtCLS0C64gijKFhCURZZACBD2JWwhILuEfQuyhiWEJPCZ89LTUz3d
        Uz1Gq6b6h67Uqbz37n33fd/5nvM9576PcLn4M9tHf2ZwCra/AH4oQ3958C8PfqgHPvT+/2sMbjr/u+Yq
        1x1rTlzrzt9pskcAuzrMfPPlRXZ5HePQ10GcUoVzUnUN1bEfOOYfTMDREPz9gvE/ctX9r1J9/7Mdu4oq
        4Eex6+65P1+/wFG/c5w+eZ2vDoTi9fF5rlxO/B1IjwAe8D1HU/202Aznz9xnyOxkfMTF0MAqA/3L7uOR
        QSdvutcYeLNG35tZhkeWGRpyMjS4ycgw9PVZ6eoZZ2RsgcGhZU6obtDTAfqiOW5EFPL1V1f+w4seAfzM
        N5Dm+gUaaxY4ezKa0UHcgF63WWg0DNDaPImxSXmBadqN87QYRzG1TdDYMEV93QTNMtbYOILRZGZweI7B
        QZt4/jadJqgssXPvVhVffh76AQB9Qmips9NQtcKpgGj6uhx0dyxSU9VDoaaBokIjmlwTuVntFGm6KSw0
        UVTUTm6OieysVvLzxWSerqSRppZ+hodd+B26hakRasvgyUMT+33e04NKIB/Ye00AOjFU2FEdiWF8CCZG
        obd7hjbTCJ2vLbQZ39JsmKWtxer2WFvbLMYW8WbznPtY8arRNEi/eZ6JcTj8TRSGSqgphYTHvXjvCmJt
        dY0Nh8PtyXem2LXu4tPdYTRVb1JXZufYoWimBJxlAgbkYb09UwyarQz22+jvcbjp7+mWY7ND4s5Jb5+d
        gSE7vf3z9A1MY5nZ5O1bOHLogdALZVpIjDOzY/slCoqacK6vewbQseZin9d16stc1JSsC8BHjAkIBVBT
        Yx+lpQb0pUZKdG3oCroo149QUizX9f1CdY9Q+1qo7aBYb6Syto3XXRbm5iDA7zF6AVeUu0nS00F2el0m
        J79OvGjzDOC6zcWerWFUF7uo0q1z/NATFmdgdlrx1DgNDa8x1HdTW91LZZmZutpJqqtGqK0bp6JihLLy
        AWrqzFTXdWNo7qHPPMfsLCI98egLQZPlQh0/zJ5dV8jKqWbJamXT6Xx3ip12Fzu3XqNM56BcZyPgcKwb
        4PKiAtLF9NQqi4suFhdwU6f8jwv9MwJiVuYp3pJnMv3WxdS0jaVVmJJ5KtVT8TrkZm+iTrDg7R1O5qsK
        tCWlngFUAna7VyiFWhvaogX8JYtnxHtKorxunqW6rJPK8kbqDB3iqUGhsp/yigHxXh+Guje0NA5SW9Et
        etdKQ12vxOYiUwL68PEHlFZAcoqdxPhFfHyjSH6eh7a0QOLQ/u4edAPccx2Nzk6+bpZjJ2JYkAdMjEBb
        wwKlBR1o8vRotBXkaFp5mWWkoLCDvBwD+TmVIju16F4Z0GY3UFXaRXv7NPZN8D8TQ47WRVoGqNV2du++
        TWLKK7T6/PcA6B1BToGNzFwL/qrH2O1gX4EloWpW6Jx9a8e6LOcS31a5vizH8wq9Mr4kL7MmtiLndrmu
        lGXbBuw/eJOHcaMkpTqJT1xhm1ckKekaSiq17wMwkrRsK+oXowSonrEkIOwCZkMMUYVNeaBLvGKXmm8T
        8BLjONdkXMaQY2WOQ8CtSSza5J5VmX/6UhrPUufIyMUNcMvWcFJfFIgjsj0DqAj1zn23BeAqKZnTXAzO
        Z0SEdnxMtFBofisenLJsMDa5zoCcmyU2R+Vf0cqZKfGiRRJEjsdFmsYGZEzuK6u3cupSFrFJM/LSm8TE
        vmXr9nDJ4nIB+MpzgHs+e8iL3HUyNCvciW7l2MmnHPF7yMEv7kl3c5PDfiEcPBrEQb8b+PnHSEcTg8rv
        LicDwjlx9IpUn3BUR6OkA4rj9JlUQm+WcfpyIXfjpolTr/EgdprtOyJ4lVdNfpHGLdbvXEk2HE52ffoQ
        daadlxq7LDhMctoAT+LaePTASNzjJuIT9Dx6puX+o0ruRxt49qSNxCeNUiF0JMRppJTpiYut5f69RiJv
        NRFxz0hMyjjP8+GFWMqLdYnBH0lOLSIrN8dzgFv33OFx8iJJ2cvEqkc5+V02p869JChIx8OHjaRnNJOR
        YyQ1s4/nL4Z4+XyYjLResl7Wk51ZRdaLRuKfNhEWVonqdAGHTuQQeqeLm0/e8jR9nedZDj7ZcZ3EVJ1I
        T6XnALfsiSIp04FaaH6UOsGxc68IvlaG6kQGdfWbrEoSrEngz0gSLCiJsCRJI8myJGJuE2FWPmJYRDuv
        hRs4c7GKw9/quBjRzlOliuRskpBmZYd3JOr0MgqL9dJle6CDCsUKwMQsJ8n5DmLSZrgYXsX3V/V8fSSV
        qnoYlkSJflZJaGQpEbfqKNYt0d8L3V1TtEk3/rpzGn2FhRPfajh+tgr/72u4dOsN8ZLBaqE4KcMqiRgh
        VJdTqCvzDKCSxVu87wi9LpI1Gzx6OcflGwYCha4jqmya20UHRXbOBiVw7tIrzgfmSR9okQ5HyWgLpo5O
        WtuHqaixEHilmqDwPk5daSPk/igJGkiVhkGdvcBO3x/dALXFHlL8b4DSdahlsdjMRYKjjETGdHIuqIK6
        ZhFl0bzj38VxPaqawBCtNKszTE2KrExZ6DJ30j0wgbFjmSuRTVwM6+VC5ABXYywkynrPiwVg7gI7fMKk
        1CkAqz2LQSWAPtl7l6Q8yTZZ7EnuCiH3TIQ/7OR8SA3lQvGcxKACMCq2hbAblWRmmRkdleZAyszAZBf9
        0qG2dFsJiWzkQlgPQfcmuRY3T4I0C2ml8uJ5s3jtC5VSp6ewqMbdtL6zzCgAP/a5g1roeC7db5zGxk/x
        ZkLutHIuuJrqFkkGqSKnZWd2/U4tN+4ZUKeYGBu3s+qaZd4+xNj8JM09czLeSmTsPGGP57kebyVRXjit
        fJNUjQCUll8BWFRc5znALb53UUvvllYOzwpFC3PmuSEgg39qpVQ8OCFZ+8OtXEJl8xMuVqAdYnrGwfLG
        BPOufiaXxmnqsYi0GLn5bImIBBuRyaskyQu/rIJ07Ry79l9zU1yib/Ac4DbfCNIEWKYAVGtXuZM0SLR6
        iNsx3eiqXG6Kq01LGF7LLs2wKltLKcHi1TVW5LeAUrL7Jza5GW0iKs7CXbWVqJR50vUb5FQ7yC6ewfuz
        q1KLa1iRQu9Rw6pQ/JV/BJmaEQpKreQVWUl5OUFMXCeP47soLbfSL/vecelchiUxzFJ3FdkZlno9ZnEx
        LnuQHvM6pZWTcp9UoMR+4p+PSdmcJbtollfaCXQV0/h+cUVaui5sKx62/ArAA9+cY/+Xl9mzLxivnSHs
        9YngHx8H8re/n2HH7kAZC8bn8wvs8lGx0ycA7/2nRNdOsWvfWfYdCMTbN4htO75jy7bv2eoVyD7fcA58
        EcnuvUFs2X6GIwE3pJKosFgWcNg93DT9+iPQhvItRXqqiqopiTMz2bkdZOe1kiENqTq9hOT0QtKyStyW
        nF7kLl1KdUh9UScl0CDNrEk2Rl08iC4hJa1RWnwpj0Lr/NwyFqXN/tV3c4+y+Nc3KvHhXHfI7ssupWxF
        WnyTqL+B3IIK8qWr1pXVCFXlP1tRtZica2U830BOXpPbtLp29OVdskV4497t2Vb+VQ8FoLK+R/viP/qM
        piymaJbSHq3b1txbxrXVVXngipzbxNt2tynjijnWlHnKuQPb8qp7vgJOmf/b57y3B//Xd79fvgz8Mk95
        iV+88lsm/mitfwJ+H0Tq9gvmlQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="dlgImagem.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>